<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="web"/>

    <!-- **************************************************************** -->
    <!--  THYMELEAF-SPECIFIC ARTIFACTS                                    -->
    <!--  TemplateResolver <- TemplateEngine <- ViewResolver              -->
    <!-- **************************************************************** -->

    <bean id="templateResolver"
          class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
        <property name="prefix" value="/WEB-INF/pages/" />
        <property name="suffix" value=".html" />
        <property name="templateMode" value="HTML5" />
        <!-- Template cache is set to false (default is true).        -->
        <property name="cacheable" value="false" />
    </bean>

    <bean id="templateEngine" class="org.thymeleaf.spring3.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver" />
        <!--<property name="additionalDialects">-->
            <!--<set>-->
                <!--<bean class="org.thymeleaf.extras.springsecurity3.dialect.SpringSecurityDialect"/>-->
            <!--</set>-->
        <!--</property>-->
    </bean>

    <!--
       - The ContentNegotiatingViewResolver delegates to the InternalResourceViewResolver and BeanNameViewResolver,
       - and uses the requested media type (determined by the path extension) to pick a matching view.
       - When the media type is 'text/html', it will delegate to the InternalResourceViewResolver's JstlView,
       - otherwise to the BeanNameViewResolver.
       -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="contentNegotiationManager" ref="cnManager"/>

        <property name="viewResolvers">
            <list>

                <!-- Used here for 'xml' and 'atom' views  -->
                <bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
                    <property name="order" value="1"/>
                </bean>

                <bean class="org.thymeleaf.spring3.view.ThymeleafViewResolver">
                    <property name="templateEngine" ref="templateEngine" />
                    <property name="order" value="2"/>
                </bean>

            </list>
        </property>
    </bean>

    <!-- Simple strategy: only path extension is taken into account -->
    <bean id="cnManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="true"/>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="defaultContentType" value="text/html"/>

        <property name="mediaTypes">
            <map>
                <entry key="html" value="text/html" />
                <entry key="xml" value="application/xml" />
                <entry key="atom" value="application/atom+xml" />
            </map>
        </property>
    </bean>
</beans>